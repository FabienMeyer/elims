# Pre-commit configuration for ELIMS
repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: ^mkdocs\.yml$
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=5000']  # Allow up to 5MB for docs assets
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']

  # Python code formatting and linting (uses [tool.ruff] from pyproject.toml)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      # Run formatter check (same as CI: ruff format --check)
      - id: ruff-format
      # Run the linter (same as CI: ruff check)
      - id: ruff
        args: [--fix]

  # Python type checking (uses [tool.mypy] from pyproject.toml)
  # Aligned with CI: uv run mypy elims/ tests/
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic
          - sqlmodel
          - pytest
          - pytest-asyncio
          - fastapi
          - sqlalchemy

  # Markdown formatting (uses [tool.mdformat] from pyproject.toml)
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.22
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter
          - mdformat-tables
        # No args needed - uses pyproject.toml config

  # Documentation linting with Vale
  - repo: https://github.com/errata-ai/vale
    rev: v3.12.0
    hooks:
      - id: vale
        files: \.md$
        args: [--config=.vale.ini]

# Configuration
default_language_version:
  python: python3.13

# Performance: only run on changed files
default_stages: [pre-commit]

# Fail fast - stop on first failure
fail_fast: true
